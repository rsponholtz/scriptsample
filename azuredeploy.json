{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "teststorageType": {
      "type": "string",
      "defaultValue": "Standard_LRS",
      "allowedValues": [
        "Standard_LRS",
        "Standard_ZRS",
        "Standard_GRS",
        "Standard_RAGRS",
        "Premium_LRS"
      ]
    },
    "testvmName": {
      "type": "string",
      "minLength": 1
    },
    "AdminUserName": {
      "type": "string",
      "minLength": 1
    },
    "AdminPassword": {
      "type": "securestring"
    },
    "testvmUbuntuOSVersion": {
      "type": "string",
      "defaultValue": "14.04.2-LTS",
      "allowedValues": [
        "12.04.5-LTS",
        "14.04.2-LTS"
      ]
    },
    "jumpboxnicName": {
      "type": "string",
      "minLength": 1
    },
    "jumpboxipDnsName": {
      "type": "string",
      "minLength": 1
    },
    "jumpboxvmName": {
      "type": "string",
      "minLength": 1
    },
    "jumpboxvmWindowsOSVersion": {
      "type": "string",
      "defaultValue": "2012-R2-Datacenter",
      "allowedValues": [
        "2008-R2-SP1",
        "2012-Datacenter",
        "2012-R2-Datacenter",
        "Windows-Server-Technical-Preview"
      ]
    },
    "jumpboxvmpipDnsName": {
      "type": "string",
      "minLength": 1
    },
    "applicationGatewayName": {
      "type": "string"
    },
    "publicIpAddressName": {
      "type": "string"
    }
  },
  "variables": {
    "teststorageName": "[concat('teststorage', uniqueString(resourceGroup().id))]",
    "testnetworkPrefix": "10.0.0.0/16",
    "testnetworkSubnet1Name": "Subnet-1",
    "testnetworkSubnet1Prefix": "10.0.0.0/24",
    "testnetworkSubnet2Name": "Subnet-2",
    "testnetworkSubnet2Prefix": "10.0.1.0/24",
    "testnetworkSubnet2Name": "Subnet-3",
    "testnetworkSubnet2Prefix": "10.0.2.0/24",
    "testvmImagePublisher": "Canonical",
    "testvmImageOffer": "UbuntuServer",
    "testvmOSDiskName": "testvmOSDisk",
    "testvmVmSize": "Standard_D2_v2",
    "testvmVnetID": "[resourceId('Microsoft.Network/virtualNetworks', 'testnetwork')]",
    "testvmSubnetRef": "[concat(variables('testvmVnetID'), '/subnets/', variables('testnetworkSubnet1Name'))]",
    "testvmStorageAccountContainerName": "vhds",
    "testvmNicName": "[concat(parameters('testvmName'), 'NetworkInterface')]",
    "jumpboxnicVnetID": "[resourceId('Microsoft.Network/virtualNetworks', 'testnetwork')]",
    "jumpboxnicSubnetRef": "[concat(variables('jumpboxnicVnetID'), '/subnets/', variables('testnetworkSubnet1Name'))]",
    "jumpboxipName": "jumpboxip",
    "jumpboxvmImagePublisher": "MicrosoftWindowsServer",
    "jumpboxvmImageOffer": "WindowsServer",
    "jumpboxvmOSDiskName": "jumpboxvmOSDisk",
    "jumpboxvmVmSize": "Standard_D2_v2",
    "jumpboxvmVnetID": "[resourceId('Microsoft.Network/virtualNetworks', 'testnetwork')]",
      "jumpboxvmSubnetRef": "[concat(variables('jumpboxvmVnetID'), '/subnets/', variables('testnetworkSubnet1Name'))]",
    "gatewaySubnetRef": "[concat(resourceId('Microsoft.Network/virtualNetworks', 'testnetwork'), '/subnets/Subnet-3')]",      
    "jumpboxvmStorageAccountContainerName": "vhds",
    "jumpboxvmNicName": "[concat(parameters('jumpboxvmName'), 'NetworkInterface')]",
    "jumpboxvmpipName": "jumpboxvmpip",
    "testscriptScriptFolder": "CustomScripts",
    "testscriptScriptFileName": "testscript.sh",
    "vnetId": "[resourceId('Microsoft.Network/virtualNetworks', 'testnetwork')]",
    "publicIPRef": "[resourceId('Microsoft.Network/publicIPAddresses/', parameters('publicIpAddressName'))]",
    "subnetRef": "[concat(variables('jumpboxvmVnetID'), '/subnets/', variables('testnetworkSubnet1Name'))]",
    "applicationGatewayID": "[resourceId('Microsoft.Network/applicationGateways', parameters('applicationGatewayName'))]"
  
},
    "resources": [
      {
        "name": "[variables('teststorageName')]",
        "type": "Microsoft.Storage/storageAccounts",
        "location": "[resourceGroup().location]",
        "apiVersion": "2016-01-01",
        "sku": {
          "name": "[parameters('teststorageType')]"
        },
        "dependsOn": [],
        "tags": {
          "displayName": "teststorage"
        },
        "kind": "Storage"
      },
      {
        "name": "testnetwork",
        "type": "Microsoft.Network/virtualNetworks",
        "location": "[resourceGroup().location]",
        "apiVersion": "2016-03-30",
        "dependsOn": [],
        "tags": {
          "displayName": "testnetwork"
        },
        "properties": {
          "addressSpace": {
            "addressPrefixes": [
              "[variables('testnetworkPrefix')]"
            ]
          },
          "subnets": [
            {
              "name": "[variables('testnetworkSubnet1Name')]",
              "properties": {
                "addressPrefix": "[variables('testnetworkSubnet1Prefix')]"
              }
            },
            {
              "name": "[variables('testnetworkSubnet2Name')]",
              "properties": {
                "addressPrefix": "[variables('testnetworkSubnet2Prefix')]"
              }
            }
          ]
        }
      },
      {
        "name": "[variables('testvmNicName')]",
        "type": "Microsoft.Network/networkInterfaces",
        "location": "[resourceGroup().location]",
        "apiVersion": "2016-03-30",
        "dependsOn": [
          "[resourceId('Microsoft.Network/virtualNetworks', 'testnetwork')]"
        ],
        "tags": {
          "displayName": "testvmNic"
        },
        "properties": {
          "ipConfigurations": [
            {
              "name": "ipconfig1",
              "properties": {
                "privateIPAllocationMethod": "Dynamic",
                "subnet": {
                  "id": "[variables('testvmSubnetRef')]"
                }
              }
            }
          ]
        }
      },
      {
        "name": "[parameters('testvmName')]",
        "type": "Microsoft.Compute/virtualMachines",
        "location": "[resourceGroup().location]",
        "apiVersion": "2015-06-15",
        "dependsOn": [
          "[resourceId('Microsoft.Storage/storageAccounts', variables('teststorageName'))]",
          "[resourceId('Microsoft.Network/networkInterfaces', variables('testvmNicName'))]"
        ],
        "tags": {
          "displayName": "testvm"
        },
        "properties": {
          "hardwareProfile": {
            "vmSize": "[variables('testvmVmSize')]"
          },
          "osProfile": {
            "computerName": "[parameters('testvmName')]",
            "adminUsername": "[parameters('AdminUsername')]",
            "adminPassword": "[parameters('AdminPassword')]"
          },
          "storageProfile": {
            "imageReference": {
              "publisher": "[variables('testvmImagePublisher')]",
              "offer": "[variables('testvmImageOffer')]",
              "sku": "[parameters('testvmUbuntuOSVersion')]",
              "version": "latest"
            },
            "osDisk": {
              "name": "testvmOSDisk",
              "vhd": {
                "uri": "[concat(reference(resourceId('Microsoft.Storage/storageAccounts', variables('teststorageName')), '2016-01-01').primaryEndpoints.blob, variables('testvmStorageAccountContainerName'), '/', variables('testvmOSDiskName'), '.vhd')]"
              },
              "caching": "ReadWrite",
              "createOption": "FromImage"
            },
            "dataDisks": [
              {
                "lun": 0,
                "name": "[concat(parameters('testvmName'),'-datadisk')]",
                "createOption": "Empty",
                "vhd": {
                  "uri": "[concat(reference(resourceId('Microsoft.Storage/storageAccounts', variables('teststorageName')), '2016-01-01').primaryEndpoints.blob, variables('testvmStorageAccountContainerName'), '/', variables('testvmOSDiskName'),'data' ,'.vhd')]"
                },
                "caching": "None",
                "diskSizeGB": "1023"
              }
            ]
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('testvmNicName'))]"
              }
            ]
          }
        },
        "resources": [
          {
            "name": "testscript",
            "type": "extensions",
            "location": "[resourceGroup().location]",
            "apiVersion": "2016-03-30",
            "dependsOn": [
              "[resourceId('Microsoft.Compute/virtualMachines', parameters('testvmName'))]"
            ],
            "tags": {
              "displayName": "testscript"
            },
            "properties": {
              "publisher": "Microsoft.Azure.Extensions",
              "type": "CustomScript",
              "typeHandlerVersion": "2.0",
              "autoUpgradeMinorVersion": true,
              "settings": {
                "fileUris": [
                  "https://raw.githubusercontent.com/rsponholtz/scriptsample/master/CustomScripts/testscript.sh"
                ],
                "commandToExecute": "sh testscript.sh"
              }
            }
          }
        ]
      },
      {
        "name": "[variables('jumpboxvmNicName')]",
        "type": "Microsoft.Network/networkInterfaces",
        "location": "[resourceGroup().location]",
        "apiVersion": "2016-03-30",
        "dependsOn": [
          "[resourceId('Microsoft.Network/virtualNetworks', 'testnetwork')]",
          "[resourceId('Microsoft.Network/publicIPAddresses', variables('jumpboxvmpipName'))]"
        ],
        "tags": {
          "displayName": "jumpboxvmNic"
        },
        "properties": {
          "ipConfigurations": [
            {
              "name": "ipconfig1",
              "properties": {
                "privateIPAllocationMethod": "Dynamic",
                "subnet": {
                  "id": "[variables('jumpboxvmSubnetRef')]"
                },
                "publicIPAddress": {
                  "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('jumpboxvmpipName'))]"
                }
              }
            }
          ]
        }
      },
      {
        "name": "[parameters('jumpboxvmName')]",
        "type": "Microsoft.Compute/virtualMachines",
        "location": "[resourceGroup().location]",
        "apiVersion": "2015-06-15",
        "dependsOn": [
          "[resourceId('Microsoft.Storage/storageAccounts', variables('teststorageName'))]",
          "[resourceId('Microsoft.Network/networkInterfaces', variables('jumpboxvmNicName'))]"
        ],
        "tags": {
          "displayName": "jumpboxvm"
        },
        "properties": {
          "hardwareProfile": {
            "vmSize": "[variables('jumpboxvmVmSize')]"
          },
          "osProfile": {
            "computerName": "[parameters('jumpboxvmName')]",
            "adminUsername": "[parameters('AdminUsername')]",
            "adminPassword": "[parameters('AdminPassword')]"
          },
          "storageProfile": {
            "imageReference": {
              "publisher": "[variables('jumpboxvmImagePublisher')]",
              "offer": "[variables('jumpboxvmImageOffer')]",
              "sku": "[parameters('jumpboxvmWindowsOSVersion')]",
              "version": "latest"
            },
            "osDisk": {
              "name": "jumpboxvmOSDisk",
              "vhd": {
                "uri": "[concat(reference(resourceId('Microsoft.Storage/storageAccounts', variables('teststorageName')), '2016-01-01').primaryEndpoints.blob, variables('jumpboxvmStorageAccountContainerName'), '/', variables('jumpboxvmOSDiskName'), '.vhd')]"
              },
              "caching": "ReadWrite",
              "createOption": "FromImage"
            }
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('jumpboxvmNicName'))]"
              }
            ]
          }
        }
      },
      {
        "name": "[variables('jumpboxvmpipName')]",
        "type": "Microsoft.Network/publicIPAddresses",
        "location": "[resourceGroup().location]",
        "apiVersion": "2016-03-30",
        "dependsOn": [],
        "tags": {
          "displayName": "jumpboxvmpip"
        },
        "properties": {
          "publicIPAllocationMethod": "Dynamic",
          "dnsSettings": {
            "domainNameLabel": "[parameters('jumpboxvmpipDnsName')]"
          }
        }
      },
      {
        "name": "[parameters('applicationGatewayName')]",
        "type": "Microsoft.Network/applicationGateways",
        "apiVersion": "2017-10-01",
        "location": "[resourceGroup().location]",
        "dependsOn": [
          "[concat('Microsoft.Network/publicIPAddresses/', parameters('publicIpAddressName'))]"
        ],
        "properties": {
          "sku": {
            "name": "Standard_Small",
            "tier": "Standard",
            "capacity": "2"
          },
          "gatewayIPConfigurations": [
            {
              "name": "appGatewayIpConfig",
              "properties": {
                "subnet": {
                  "id": "[variables('gatewaySubnetRef')]"
                }
              }
            }
          ],
          "frontendIPConfigurations": [
            {
              "name": "appGatewayFrontendIP",
              "properties": {
                "PublicIPAddress": {
                  "id": "[variables('publicIPRef')]"
                }
              }
            }
          ],
          "frontendPorts": [
            {
              "name": "appGatewayFrontendPort",
              "properties": {
                "Port": 80
              }
            }
          ],
          "backendAddressPools": [
            {
              "name": "appGatewayBackendPool",
              "properties": {
                "backendIPConfigurations": [
                  {
                      "id": "[concat(resourceId('Microsoft.Network/networkInterfaces', variables('testvmNicName')), '/ipConfigurations/ipconfig1')]"
                  }
                ],
                "BackendAddresses": []
              }
            }
          ],
          "backendHttpSettingsCollection": [
            {
              "name": "appGatewayBackendHttpSettings",
              "properties": {
                "Port": 80,
                "Protocol": "Http",
                "CookieBasedAffinity": "Disabled"
              }
            }
          ],
          "httpListeners": [
            {
              "name": "appGatewayHttpListener",
              "properties": {
                "FrontendIPConfiguration": {
                  "Id": "[concat(variables('applicationGatewayID'), '/frontendIPConfigurations/appGatewayFrontendIP')]"
                },
                "FrontendPort": {
                  "Id": "[concat(variables('applicationGatewayID'), '/frontendPorts/appGatewayFrontendPort')]"
                },
                "Protocol": "Http",
                "SslCertificate": null
              }
            }
          ],
          "requestRoutingRules": [
            {
              "Name": "rule1",
              "properties": {
                "RuleType": "Basic",
                "httpListener": {
                  "id": "[concat(variables('applicationGatewayID'), '/httpListeners/appGatewayHttpListener')]"
                },
                "backendAddressPool": {
                  "id": "[concat(variables('applicationGatewayID'), '/backendAddressPools/appGatewayBackendPool')]"
                },
                "backendHttpSettings": {
                  "id": "[concat(variables('applicationGatewayID'), '/backendHttpSettingsCollection/appGatewayBackendHttpSettings')]"
                }
              }
            }
          ],
          "sslCertificates": []
        }
      },
      {
        "apiVersion": "2017-10-01",
        "type": "Microsoft.Network/publicIPAddresses",
        "name": "[parameters('publicIpAddressName')]",
        "location": "[resourceGroup().location]",
        "properties": {
          "publicIPAllocationMethod": "Dynamic"
        }
      }
    ],
    "outputs": {}
  }

